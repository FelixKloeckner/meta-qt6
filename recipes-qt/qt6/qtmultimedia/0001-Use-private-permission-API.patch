From 7054093fdb8ae9c56fd6488be71af2c5cc4e0c4e Mon Sep 17 00:00:00 2001
From: Assam Boudjelthia <assam.boudjelthia@qt.io>
Date: Mon, 26 Jul 2021 14:53:13 +0300
Subject: [PATCH] Use private permission API

The public permission API is being postponed until 6.3, for now,
we can use the private API.

Change-Id: Idbcbe06996f8334bd7d5b4cab86132c35fdc0862
Reviewed-by: Lars Knoll <lars.knoll@qt.io>
---
 examples/multimedia/video/qmlvideo/main.cpp       |  8 --------
 examples/multimedia/video/qmlvideofx/main.cpp     |  8 --------
 .../android/audio/qandroidaudiosource.cpp         |  7 ++++---
 .../android/common/qandroidmultimediautils.cpp    | 15 ++++++++-------
 4 files changed, 12 insertions(+), 26 deletions(-)

diff --git a/examples/multimedia/video/qmlvideo/main.cpp b/examples/multimedia/video/qmlvideo/main.cpp
index ea5d41033..e288c0ae4 100644
--- a/examples/multimedia/video/qmlvideo/main.cpp
+++ b/examples/multimedia/video/qmlvideo/main.cpp
@@ -73,14 +73,6 @@ int main(int argc, char *argv[])
     PerformanceMonitor::qmlRegisterTypes();
 #endif
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 2, 0)
-    auto permission = QPermission::WriteStorage;
-    if (QCoreApplication::requestPermission(permission).result() != QPermission::Authorized) {
-        qWarning() << "Couldn't get 'WriteStorage' permission!";
-        return -1;
-    }
-#endif
-
     QString source1, source2;
     qreal volume = 0.5;
     QStringList args = app.arguments();
diff --git a/examples/multimedia/video/qmlvideofx/main.cpp b/examples/multimedia/video/qmlvideofx/main.cpp
index 6be3623ef..814c85368 100644
--- a/examples/multimedia/video/qmlvideofx/main.cpp
+++ b/examples/multimedia/video/qmlvideofx/main.cpp
@@ -69,14 +69,6 @@ int main(int argc, char *argv[])
     PerformanceMonitor::qmlRegisterTypes();
 #endif
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 2, 0)
-    auto permission = QPermission::WriteStorage;
-    if (QCoreApplication::requestPermission(permission).result() != QPermission::Authorized) {
-        qWarning() << "Couldn't get 'WriteStorage' permission!";
-        return -1;
-    }
-#endif
-
     QUrl fileName;
     qreal volume = 0.5;
     QStringList args = app.arguments();
diff --git a/src/multimedia/platform/android/audio/qandroidaudiosource.cpp b/src/multimedia/platform/android/audio/qandroidaudiosource.cpp
index e898f8369..c7eaf57ad 100644
--- a/src/multimedia/platform/android/audio/qandroidaudiosource.cpp
+++ b/src/multimedia/platform/android/audio/qandroidaudiosource.cpp
@@ -41,6 +41,7 @@
 
 #include "qopenslesengine_p.h"
 #include <private/qaudiohelpers_p.h>
+#include <QtCore/private/qandroidextras_p.h>
 #include <qbuffer.h>
 #include <qdebug.h>
 
@@ -61,12 +62,12 @@ static bool hasRecordingPermission()
     if (QNativeInterface::QAndroidApplication::sdkVersion() < 23)
         return true;
 
-    const QPermission::PermissionType key(QPermission::Microphone);
+    const QtAndroidPrivate::PermissionType key(QtAndroidPrivate::Microphone);
     // Permission already granted?
-    if (QCoreApplication::checkPermission(key).result() == QPermission::Authorized)
+    if (QtAndroidPrivate::checkPermission(key).result() == QtAndroidPrivate::Authorized)
         return true;
 
-    if (QCoreApplication::requestPermission(key).result() != QPermission::Authorized) {
+    if (QtAndroidPrivate::requestPermission(key).result() != QtAndroidPrivate::Authorized) {
         qDebug("Microphone permission denied by user!");
         return false;
     }
diff --git a/src/multimedia/platform/android/common/qandroidmultimediautils.cpp b/src/multimedia/platform/android/common/qandroidmultimediautils.cpp
index 79c01a68f..51c08006f 100644
--- a/src/multimedia/platform/android/common/qandroidmultimediautils.cpp
+++ b/src/multimedia/platform/android/common/qandroidmultimediautils.cpp
@@ -42,6 +42,7 @@
 
 #include <qlist.h>
 #include <QtCore/qcoreapplication.h>
+#include <QtCore/private/qandroidextras_p.h>
 
 QT_BEGIN_NAMESPACE
 
@@ -108,16 +109,16 @@ AndroidCamera::ImageFormat qt_androidImageFormatFromPixelFormat(QVideoFrameForma
     }
 }
 
-static bool androidRequestPermission(QPermission::PermissionType key)
+static bool androidRequestPermission(QtAndroidPrivate::PermissionType key)
 {
     if (QNativeInterface::QAndroidApplication::sdkVersion() < 23)
         return true;
 
     // Permission already granted?
-    if (QCoreApplication::checkPermission(key).result() == QPermission::Authorized)
+    if (QtAndroidPrivate::checkPermission(key).result() == QtAndroidPrivate::Authorized)
         return true;
 
-    if (QCoreApplication::requestPermission(key).result() != QPermission::Authorized)
+    if (QtAndroidPrivate::requestPermission(key).result() != QtAndroidPrivate::Authorized)
         return false;
 
     return true;
@@ -125,7 +126,7 @@ static bool androidRequestPermission(QPermission::PermissionType key)
 
 bool qt_androidRequestCameraPermission()
 {
-    if (!androidRequestPermission(QPermission::Camera)) {
+    if (!androidRequestPermission(QtAndroidPrivate::Camera)) {
         qCDebug(qtAndroidMediaPlugin, "Camera permission denied by user!");
         return false;
     }
@@ -135,7 +136,7 @@ bool qt_androidRequestCameraPermission()
 
 bool qt_androidRequestRecordingPermission()
 {
-    if (!androidRequestPermission(QPermission::Microphone)) {
+    if (!androidRequestPermission(QtAndroidPrivate::Microphone)) {
         qCDebug(qtAndroidMediaPlugin, "Microphone permission denied by user!");
         return false;
     }
@@ -145,8 +146,8 @@ bool qt_androidRequestRecordingPermission()
 
 bool qt_androidRequestWriteStoragePermission()
 {
-    if (!androidRequestPermission(QPermission::WriteStorage)) {
-        qCDebug(qtAndroidMediaPlugin, "WriteStorage permission denied by user!");
+    if (!androidRequestPermission(QtAndroidPrivate::Storage)) {
+        qCDebug(qtAndroidMediaPlugin, "Storage permission denied by user!");
         return false;
     }
 
